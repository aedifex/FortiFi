pipeline:
  name: FortiFi
  identifier: FortiFi
  projectIdentifier: default_project
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1720712504098
        repoName: aedifex/FortiFi
        build: <+input>
  stages:
    - stage:
        name: Build Server Component
        identifier: Build_Server_Component
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: Clone Codebase
                      identifier: Say_Hi
                      spec:
                        shell: Sh
                        command: |-
                          echo "Hello, FortiFi!"
                          ls -alt
                  - step:
                      type: Background
                      name: Run MYSQL
                      identifier: Run_MYSQL
                      spec:
                        connectorRef: chriscircleci
                        image: mysql:latest
                        shell: Sh
                        envVariables:
                          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
                        portBindings:
                          "3306": "3306"
              - step:
                  type: Run
                  name: Configure database
                  identifier: Configure_database
                  spec:
                    shell: Sh
                    command: |-
                      echo "Waiting for MySQL to start..."
                      sleep 15  # Allow time for MySQL startup

                      # Verify MySQL is running
                      if ! nc -z 127.0.0.1 3306; then
                        echo "MySQL is not running"
                        exit 1
                      fi

                      echo "MySQL is running, proceeding with database setup"

                      # Initialize database
                      mysql -h 127.0.0.1 -P 3306 -uroot --password="" -e "SOURCE server/init.sql;"
              - step:
                  type: Run
                  name: Inject Firebase Secret
                  identifier: Inject_Firebase_Secret
                  spec:
                    shell: Sh
                    command: |-
                      echo "Retrieving Firebase JSON secret..."
                      echo '<+secrets.getValue("firebase_authjson")>' > /harness/firebase_auth.json
                      echo "Firebase JSON stored at /harness/firebase_auth.json"
              - step:
                  type: Run
                  name: Execute Tests
                  identifier: Execute_Tests
                  spec:
                    shell: Sh
                    command: |-
                      cd server
                      make set-env
                      chmod 644 /harness/firebase_auth.json
                      pwd
                      mv /harness/firebase_auth.json .
                      ls -alt
                      pwd
                      cat firebase_auth.json
                      make test
  variables:
    - name: DB_PASSWORD
      type: String
      description: ""
      required: false
      value: ""
    - name: MYSQL_ALLOW_EMPTY_PASSWORD
      type: String
      description: ""
      required: false
      value: "yes"
    - name: GOOGLE_APPLICATION_CREDENTIALS
      type: String
      description: ""
      required: false
      value: /harness/firebase_auth.json
